@model ProductListViewModel

<div class="row">
    <div class="col-md-3">
        @await Component.InvokeAsync("Categories")
        @await Component.InvokeAsync("Search")   
    </div>
    <div class="col-md-9">
        <div class="row">
            @foreach (var p in Model.Products)
            {
                <div class="col-md-4">
                    @await Html.PartialAsync("_product", p)
                </div>
            }
        </div>
        <div class="d-flex justify-content-center">
            <div class="row">
                <div class="col">
                    <nav aria-label="Page navigation example">
                        <ul class="pagination">
                            @if (Model.PageInfo.CurrentPage == 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" disabled aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item">
                                    <a class="page-link" href="/products/@Model.PageInfo.CurrentCategory?page=@(Model.PageInfo.CurrentPage-1)"
                                        aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>
                            }

                            @{
                                int startPage = Math.Max(1, Model.PageInfo.CurrentPage - 5);
                                int endPage = Math.Min(Model.PageInfo.TotalPages(), Model.PageInfo.CurrentPage + 4);

                                if (endPage - startPage < 9 && startPage > 1)
                                {
                                    startPage = Math.Max(1, endPage - 9);
                                }

                                if (endPage - startPage < 9 && endPage < Model.PageInfo.TotalPages())
                                {
                                    endPage = Math.Min(Model.PageInfo.TotalPages(), startPage + 9);
                                }
                            }

                            @for (int i = startPage; i <= endPage; i++)
                            {
                                @if (string.IsNullOrEmpty(Model.PageInfo.CurrentCategory))
                                {
                                    <li class="page-item @(Model.PageInfo.CurrentPage == i ? "active" : "")">
                                        <a class="page-link" href="/products/?page=@i">@i</a>
                                    </li>
                                }
                                else
                                {
                                    <li class="page-item @(Model.PageInfo.CurrentPage == i ? "active" : "")">
                                        <a class="page-link" href="/products/@Model.PageInfo.CurrentCategory?page=@i">@i</a>
                                    </li>
                                }
                            }

                            @if (Model.PageInfo.CurrentPage == Model.PageInfo.TotalPages())
                            {
                                <li class="page-item">
                                    <a class="page-link" disabled aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item">
                                    <a class="page-link" href="/products/@Model.PageInfo.CurrentCategory?page=@(Model.PageInfo.CurrentPage+1)"
                                        aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts
{
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
        integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.min.js"
        integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6"
        crossorigin="anonymous"></script>
    <script>
        document.getElementsByClassName("addToCart")
    </script>
}
