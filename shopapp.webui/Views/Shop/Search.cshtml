@model ProductListViewModel

<div class="row">
    <div class="col-md-3">
        @await Component.InvokeAsync("Categories")
        @await Component.InvokeAsync("Search")
    </div>
    <div class="col-md-9">
        <div class="row">
            @foreach (var p in Model.Products)
            {
                <div class="col-md-4">
                    @await Html.PartialAsync("_product", p)
                </div>
            }
        </div>
        <div class="d-flex justify-content-center">
            <div class="row">
                @if (Model.PageInfo.TotalItems > 0)
                {
                    <div class="col">
                        <nav aria-label="Page navigation example">
                            <ul class="pagination">
                                @if (Model.PageInfo.CurrentPage == 1)
                                {
                                    <li class="page-item disabled">
                                        <span class="page-link" aria-label="Previous">&laquo;</span>
                                    </li>
                                }
                                else
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="/search?q=@(Model.PageInfo.SearchString)&catId=@(Model.PageInfo.catId)&min=@(Model.PageInfo.Min)&max=@(Model.PageInfo.Max)&page=@(Model.PageInfo.CurrentPage-1)" aria-label="Previous">&laquo;</a>
                                    </li>
                                }

                                @{
                                    int startPage = Math.Max(1, Model.PageInfo.CurrentPage - 5);
                                    int endPage = Math.Min(Model.PageInfo.TotalPages(), Model.PageInfo.CurrentPage + 4);

                                    if (endPage - startPage < 9 && startPage > 1)
                                    {
                                        startPage = Math.Max(1, endPage - 9);
                                    }

                                    if (endPage - startPage < 9 && endPage < Model.PageInfo.TotalPages())
                                    {
                                        endPage = Math.Min(Model.PageInfo.TotalPages(), startPage + 9);
                                    }
                                }

                                @for (int i = startPage; i <= endPage; i++)
                                {
                                    <li class="page-item @(Model.PageInfo.CurrentPage == i ? "active" : "")">
                                        <a class="page-link" href="/search?q=@(Model.PageInfo.SearchString)&catId=@(Model.PageInfo.catId)&min=@(Model.PageInfo.Min)&max=@(Model.PageInfo.Max)&page=@i">@i</a>
                                    </li>
                                }

                                @if (Model.PageInfo.CurrentPage == Model.PageInfo.TotalPages())
                                {
                                    <li class="page-item disabled">
                                        <span class="page-link" aria-label="Next">&raquo;</span>
                                    </li>
                                }
                                else
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="/search?q=@(Model.PageInfo.SearchString)&catId=@(Model.PageInfo.catId)&min=@(Model.PageInfo.Min)&max=@(Model.PageInfo.Max)&page=@(Model.PageInfo.CurrentPage+1)" aria-label="Next">&raquo;</a>
                                    </li>
                                }
                            </ul>
                        </nav>
                    </div>
                }
                else
                {
                    <div class="col-md-12">
                        <div class="alert alert-warning">
                            <p class="h5 m-0">Arama kriterlerine uyan bir sonuç bulunmamaktadır.</p>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


@section Scripts
{
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
        integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.min.js"
        integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6"
        crossorigin="anonymous"></script>
}
